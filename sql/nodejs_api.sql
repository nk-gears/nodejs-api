-- MySQL Script generated by MySQL Workbench
-- Thu May  2 20:05:23 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema nodejs_api_dev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema nodejs_api_dev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `nodejs_api_dev` DEFAULT CHARACTER SET utf8 ;
USE `nodejs_api_dev` ;

-- -----------------------------------------------------
-- Table `nodejs_api_dev`.`user_account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nodejs_api_dev`.`user_account` (
  `id` BINARY(16) NOT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `username` VARCHAR(20) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `nodejs_api_dev`.`user_profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nodejs_api_dev`.`user_profile` (
  `id` BINARY(16) NOT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(255) NOT NULL,
  `birthdate` DATE NULL,
  `gender` ENUM('male', 'female') NULL,
  `city_regency` VARCHAR(255) NULL,
  `province` VARCHAR(255) NULL,
  `country` VARCHAR(255) NULL,
  `avatar` VARCHAR(255) NULL,
  `user_account_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_profile_user_account1_idx` (`user_account_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_profile_user_account1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `nodejs_api_dev`.`user_account` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nodejs_api_dev`.`social_provider`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nodejs_api_dev`.`social_provider` (
  `id` BINARY(16) NOT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `type` ENUM('google', 'facebook', 'instagram') NOT NULL,
  `auth_id` VARCHAR(255) NOT NULL,
  `user_account_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_id_UNIQUE` (`auth_id` ASC) VISIBLE,
  INDEX `fk_social_provider_user_account1_idx` (`user_account_id` ASC) VISIBLE,
  CONSTRAINT `fk_social_provider_user_account1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `nodejs_api_dev`.`user_account` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `nodejs_api_dev`.`token_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nodejs_api_dev`.`token_type` (
  `id` CHAR(4) NOT NULL,
  `type` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `nodejs_api_dev`.`token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `nodejs_api_dev`.`token` (
  `id` BINARY(16) NOT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `token` VARCHAR(255) NOT NULL,
  `expires_in` DATETIME NULL,
  `user_account_id` BINARY(16) NOT NULL,
  `token_type_id` CHAR(4) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_token_user_account1_idx` (`user_account_id` ASC) VISIBLE,
  INDEX `fk_token_token_type1_idx` (`token_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_token_user_account1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `nodejs_api_dev`.`user_account` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_token_token_type1`
    FOREIGN KEY (`token_type_id`)
    REFERENCES `nodejs_api_dev`.`token_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `nodejs_api_dev`.`token_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `nodejs_api_dev`;
INSERT INTO `nodejs_api_dev`.`token_type` (`id`, `type`) VALUES ('TT01', 'reset_password');
INSERT INTO `nodejs_api_dev`.`token_type` (`id`, `type`) VALUES ('TT02', 'email_verification');

COMMIT;

